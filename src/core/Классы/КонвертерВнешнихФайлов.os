#Использовать fs
#Использовать v8runner
#Использовать tempfiles

Перем ПутьКОбработке;
Перем РабочийКаталог;
Перем КаталогИсходныхКодов;
Перем ИмяОбработки;
Перем КаталогШаблонов;

Перем ВерсияПлатформы;

Процедура ПриСозданииОбъекта(пПутьКОбработке, пРабочийКаталог)
	
	ПутьКОбработке = пПутьКОбработке;
	РабочийКаталог = пРабочийКаталог;
	КаталогИсходныхКодов = ОбъединитьПути(РабочийКаталог, "src");
	ИмяОбработки = "ШаблонОбработки";

КонецПроцедуры

Процедура СобратьРасширение(пВерсияПлатформы = "8.3.8") Экспорт
	
	ВерсияПлатформы = пВерсияПлатформы;
	
	ФС.ОбеспечитьКаталог(РабочийКаталог);
	ФС.ОбеспечитьКаталог(КаталогИсходныхКодов);
	ВременныйКаталогИсходников = ПолучитьИмяВременногоФайла();
	ФС.ОбеспечитьКаталог(ВременныйКаталогИсходников);

	ВыгрузитьИсходныеКодыОбработки(ВременныйКаталогИсходников);
	ИмяОбработки = ИмяОбработки(ВременныйКаталогИсходников);

	СоздатьФайлКонфигурации();
	СоздатьЛокализацию();
	СоздатьОбработку(ВременныйКаталогИсходников);
	СобратьКонфигурацию();

	УдалитьФайлы(ВременныйКаталогИсходников);

КонецПроцедуры

Функция ИмяОбработки(Каталог)

	Значение = "ШаблонОбработки";
	
	Файлы = НайтиФайлы(Каталог, "*.xml");
	Если Файлы.Количество() > 0 Тогда
		Файл = Файлы[0];
		Значение = Файл.ИмяБезРасширения;
	КонецЕсли;

	Возврат Значение;

КонецФункции

Процедура СобратьКонфигурацию()

	ПутьККонфигурации = ОбъединитьПути(РабочийКаталог, "Ext.cf");
	ПутьКВременнойБазе = ОбъединитьПути(РабочийКаталог, "tmp", Новый УникальныйИдентификатор());
	СоздатьКаталог(ПутьКВременнойБазе);

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.ИспользоватьВерсиюПлатформы(ВерсияПлатформы);

	Конфигуратор.СоздатьФайловуюБазу(ПутьКВременнойБазе);
	Конфигуратор.УстановитьКонтекст("/F" + ПутьКВременнойБазе, "", "");

	Конфигуратор.ЗагрузитьКонфигурациюИзФайлов(КаталогИсходныхКодов);	
	Конфигуратор.ВыгрузитьКонфигурациюВФайл(ПутьККонфигурации);

	УдалитьФайлы(ПутьКВременнойБазе);
	
КонецПроцедуры

Процедура ВыгрузитьИсходныеКодыОбработки(Каталог)

	ПутьКВременнойБазе = ОбъединитьПути(РабочийКаталог, "tmp", Новый УникальныйИдентификатор());
	СоздатьКаталог(ПутьКВременнойБазе);

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.ИспользоватьВерсиюПлатформы(ВерсияПлатформы);
	
	Конфигуратор.СоздатьФайловуюБазу(ПутьКВременнойБазе);
	Конфигуратор.УстановитьКонтекст("/F" + ПутьКВременнойБазе, "", "");

	Конфигуратор.ВыгрузитьВнешниеОтчетыИлиОбработкиВФайлы(Каталог, ПутьКОбработке);

	УдалитьФайлы(ПутьКВременнойБазе);

КонецПроцедуры

Процедура СоздатьОбработку(Каталог)

	КаталогОбработок = ОбъединитьПути(КаталогИсходныхКодов, "DataProcessors");
	ФС.ОбеспечитьКаталог(КаталогОбработок);

	ПутьКФайлуXMLОбработки = ОбъединитьПути(КаталогОбработок, ИмяОбработки + ".xml");
	КопироватьФайл(ОбъединитьПути(Каталог, ИмяОбработки + ".xml"), ПутьКФайлуXMLОбработки);

	ТД = Новый ТекстовыйДокумент();
	ТД.Прочитать(ПутьКФайлуXMLОбработки, КодировкаТекста.UTF8);
	Шаблон = ТД.ПолучитьТекст();
	Шаблон = СтрЗаменить(Шаблон, "ExternalDataProcessor", "DataProcessor");
	Шаблон = СтрЗаменить(Шаблон, "ШаблонОбработки", ИмяОбработки);
	Шаблон = СтрЗаменить(Шаблон, "version=""2.6""", "version=""2.4""");
	ИзменитьФайлОбработки(Шаблон);

	ТД.УстановитьТекст(Шаблон);
	ТД.Записать(ПутьКФайлуXMLОбработки);

	КаталогОбработки = ОбъединитьПути(КаталогОбработок, ИмяОбработки);
	ФС.ОбеспечитьКаталог(КаталогОбработки);
	ФС.КопироватьСодержимоеКаталога(ОбъединитьПути(Каталог, ИмяОбработки), КаталогОбработки);

	// у form.xml меняет ExternalDataProcessorObject на DataProcessorObject
	Файлы = НайтиФайлы(КаталогОбработки, "Form.xml", Истина);
	Для Каждого Файл Из Файлы Цикл

		ТД = Новый ТекстовыйДокумент();
		ТД.Прочитать(Файл.ПолноеИмя);
		Текст = ТД.ПолучитьТекст();
		Текст = СтрЗаменить(Текст, "ExternalDataProcessor", "DataProcessor");
		Текст = СтрЗаменить(Текст, "ШаблонОбработки", ИмяОбработки);
		//Текст = СтрЗаменить(Текст, "version=""2.6""", "version=""2.4""");
		ТД.УстановитьТекст(Текст);
		ТД.Записать(Файл.ПолноеИмя);

	КонецЦикла;

	// хардор для прототипа
	Файлы = НайтиФайлы(КаталогОбработки, "*.xml", Истина);
	Для Каждого Файл Из Файлы Цикл

		ТД = Новый ТекстовыйДокумент();
		ТД.Прочитать(Файл.ПолноеИмя);
		Текст = ТД.ПолучитьТекст();
		Текст = СтрЗаменить(Текст, "version=""2.6""", "version=""2.4""");
		ТД.УстановитьТекст(Текст);
		ТД.Записать(Файл.ПолноеИмя);

	КонецЦикла

КонецПроцедуры

Процедура ИзменитьФайлОбработки(Шаблон)

	// TODO: Переписать на регулярные
	НовыйКонтекст = "<InternalInfo><xr:GeneratedType name=""DataProcessorObject.ШаблонОбработки"" category=""Object""><xr:TypeId>3909b3c3-eb73-4cce-9f61-bb0abc38a660</xr:TypeId><xr:ValueId>dc585d22-8987-45f8-be1b-a2ab8b249d91</xr:ValueId></xr:GeneratedType><xr:GeneratedType name=""DataProcessorManager.ШаблонОбработки"" category=""Manager""><xr:TypeId>1da7df7f-bf5b-46a8-a3b7-0dcf9507acc5</xr:TypeId><xr:ValueId>0aaa97cd-960e-4a57-a003-f9579a1ac91c</xr:ValueId></xr:GeneratedType></InternalInfo>";
	НовыйКонтекст = СтрЗаменить(НовыйКонтекст, "ШаблонОбработки", ИмяОбработки);
	Тег = "InternalInfo"; 
	ПервыйТег = "<" + Тег +">"; 
	ВторойТег = "</" + Тег +">"; 
	ПозицияА = СтрНайти(Шаблон, ПервыйТег);
	ПозицияБ = СтрНайти(Шаблон, ВторойТег);
	Шаблон = Сред(Шаблон, 1, ПозицияА - 1) + НовыйКонтекст + Сред(Шаблон, ПозицияБ + СтрДлина(ВторойТег), 99999999);

КонецПроцедуры

Процедура СоздатьЛокализацию()

	ИмяЯзыка = "Русский";
	ИмяКаталога = ОбъединитьПути(КаталогИсходныхКодов, "Languages");
	СоздатьКаталог(ИмяКаталога);

	Шаблон = ШаблонФайлаЯзыка();
	Словарь = Новый Соответствие();
	Словарь.Вставить("@GUIDLANG", Строка(Новый УникальныйИдентификатор));
	Словарь.Вставить("@NAMELANG", ИмяЯзыка);
	Словарь.Вставить("@CODELANG", "ru");
	Словарь.Вставить("ШаблонОбработки", ИмяОбработки);
	Для Каждого КлючЗначение Из Словарь Цикл
		Шаблон = СтрЗаменить(Шаблон, КлючЗначение.Ключ, КлючЗначение.Значение);	
	КонецЦикла;

	ЗаписатьФайл(ОбъединитьПути(ИмяКаталога, ИмяЯзыка + ".xml"), Шаблон);

КонецПроцедуры

Процедура СоздатьФайлКонфигурации()

	Шаблон = ШаблонФайлаКонфигурации();
	
	Словарь = Новый Соответствие();
	Словарь.Вставить("@GUID1", Строка(Новый УникальныйИдентификатор()));
	Словарь.Вставить("@GUID2", Строка(Новый УникальныйИдентификатор()));
	Словарь.Вставить("@GUID3", Строка(Новый УникальныйИдентификатор()));
	Словарь.Вставить("@GUID4", Строка(Новый УникальныйИдентификатор()));
	Словарь.Вставить("@GUID5", Строка(Новый УникальныйИдентификатор()));
	Словарь.Вставить("@GUID6", Строка(Новый УникальныйИдентификатор()));
	Словарь.Вставить("@NAME", ИмяОбработки);
	Словарь.Вставить("@ConfigurationExtensionCompatibilityMode", ВерсияПлатформыДляКонфигурации(ВерсияПлатформы));
	Словарь.Вставить("@ScriptVariant", "Russian");
	Словарь.Вставить("@Language", "Русский");
	Словарь.Вставить("@RunMode", "ManagedApplication"); // и обычное?
	Словарь.Вставить("@Version", "1.0.0");
	Словарь.Вставить("ШаблонОбработки", ИмяОбработки);

	Для Каждого КлючЗначение Из Словарь Цикл
		Шаблон = СтрЗаменить(Шаблон, КлючЗначение.Ключ, КлючЗначение.Значение);	
	КонецЦикла;

	Путь = ОбъединитьПути(КаталогИсходныхКодов, "Configuration.xml");
	ЗаписатьФайл(Путь, Шаблон);

КонецПроцедуры

Процедура ЗаписатьФайл(Путь, Текст)

	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(Текст);
	ТекстовыйДокумент.Записать(Путь, КодировкаТекста.UTF8);

КонецПроцедуры

Функция ВерсияПлатформыДляКонфигурации(Значение)
	Возврат "Version" + СтрЗаменить(Значение, ".", "_");
КонецФункции

Функция ШаблонФайлаКонфигурации()

	ИмяФайла = ОбъединитьПути(КаталогШаблонов, "Configuration.xml");
	ТД = Новый ТекстовыйДокумент;
	ТД.Прочитать(ИмяФайла, КодировкаТекста.UTF8);
	Возврат ТД.ПолучитьТекст();

КонецФункции

Функция ШаблонФайлаЯзыка()

	ИмяФайла = ОбъединитьПути(КаталогШаблонов, "Languages.xml");
	ТД = Новый ТекстовыйДокумент;
	ТД.Прочитать(ИмяФайла, КодировкаТекста.UTF8);
	Возврат ТД.ПолучитьТекст();

КонецФункции

ПутьКОбработке = "";
РабочийКаталог = "";
ИмяОбработки = "";
КаталогШаблонов = ОбъединитьПути(ТекущийСценарий().Каталог, "..", "internal", "templates");